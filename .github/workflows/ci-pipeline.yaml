name: CI Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Set version
        id: set_version
        run: |
          version=$(date +'%Y%m%d.%H%M%S')
          echo "version=$version" >> "$GITHUB_OUTPUT"
          printf '{"version": "%s" }' "$version" > public/version.json

      - name: Install dependencies and build
        run: |
          npm ci
          npm run build
          cp dist/index.html dist/404.html

      - name: Run tests
        run: |
          npx playwright install --with-deps chromium
          npm run test:coverage

      - name: Update coverage badge
        run: |
          # Continue even if this step fails
          set -e
          coverage=$(jq '.total.lines.pct' coverage/coverage-summary.json)
          color=$(echo "$coverage < 80" | bc | awk '{if ($1) print "red"; else print "green"}')
          curl -s -X POST "https://pizza-factory.cs329.click/api/badge/${{ secrets.NET_ID }}/jwtpizzacoverage?label=Coverage&value=$coverage%25&color=$color" -H "authorization: bearer ${{ secrets.FACTORY_API_KEY }}"

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist/

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/${{ secrets.CI_IAM_ROLE }}
          aws-region: us-east-1

      - name: Deploy to AWS S3
        run: |
          aws s3 sync dist/ s3://${{ secrets.APP_BUCKET }} --delete
          aws cloudfront create-invalidation --distribution-id ${{ secrets.DISTRIBUTION_ID }} --paths "/*"
